##################################################################
#
# For testing xats2js
#
##################################################################
CAT=cat
CPF=cp -f
ECHO=echo
NODE=node
######
XSHARED=./../xshared
XATS2JS="./../bin/xats2js"
######
XATS2JS_JS1EMIT=\
"$(XSHARED)/runtime/xats2js_js1emit.js"
SRCGEN1_PRELUDE=\
"$(XSHARED)/runtime/srcgen1_prelude.js"
SRCGEN1_PRELUDE_NODE=\
"$(XSHARED)/runtime/srcgen1_prelude_node.js"
######
all:: test
######
PRELUDE=./prelude
GITHWXI=./xatslib_githwxi
######
test:: \
addrs
addrs:: ; \
$(CAT) $(XATS2JS_JS1EMIT) > output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE) >> output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE_NODE) >> output_dats.js && \
$(XATS2JS) --output-a output_dats.js -d $(PRELUDE)/addrs.dats && $(NODE) output_dats.js
######
test:: \
array
array:: ; \
$(CAT) $(XATS2JS_JS1EMIT) > output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE) >> output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE_NODE) >> output_dats.js && \
$(XATS2JS) --output-a output_dats.js -d $(PRELUDE)/array.dats && $(NODE) output_dats.js
######
test:: \
bools
bools:: ; \
$(CAT) $(XATS2JS_JS1EMIT) > output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE) >> output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE_NODE) >> output_dats.js && \
$(XATS2JS) --output-a output_dats.js -d $(PRELUDE)/bools.dats && $(NODE) output_dats.js
######
test:: \
chars
chars:: ; \
$(CAT) $(XATS2JS_JS1EMIT) > output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE) >> output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE_NODE) >> output_dats.js && \
$(XATS2JS) --output-a output_dats.js -d $(PRELUDE)/chars.dats && $(NODE) output_dats.js
######
test:: \
cbref
cbref:: ; \
$(CAT) $(XATS2JS_JS1EMIT) > output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE) >> output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE_NODE) >> output_dats.js && \
$(XATS2JS) --output-a output_dats.js -d $(PRELUDE)/cbref.dats && $(NODE) output_dats.js
######
test:: \
eqref
eqref:: ; \
$(CAT) $(XATS2JS_JS1EMIT) > output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE) >> output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE_NODE) >> output_dats.js && \
$(XATS2JS) --output-a output_dats.js -d $(PRELUDE)/eqref.dats && $(NODE) output_dats.js
######
test:: \
fact2
fact2:: ; \
$(CAT) $(XATS2JS_JS1EMIT) > output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE) >> output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE_NODE) >> output_dats.js && \
$(XATS2JS) --output-a output_dats.js -d $(PRELUDE)/fact2.dats && $(NODE) output_dats.js
######
test:: \
pswap
pswap:: ; \
$(CAT) $(XATS2JS_JS1EMIT) > output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE) >> output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE_NODE) >> output_dats.js && \
$(XATS2JS) --output-a output_dats.js -d $(PRELUDE)/pswap.dats && $(NODE) output_dats.js
######
test:: \
wtype
wtype:: ; \
$(CAT) $(XATS2JS_JS1EMIT) > output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE) >> output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE_NODE) >> output_dats.js && \
$(XATS2JS) --output-a output_dats.js -d $(PRELUDE)/wtype.dats && $(NODE) output_dats.js
######
test:: \
isAVL
isAVL:: ; \
$(CAT) $(XATS2JS_JS1EMIT) > output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE) >> output_dats.js && \
$(CAT) $(SRCGEN1_PRELUDE_NODE) >> output_dats.js && \
$(XATS2JS) --output-a output_dats.js -d $(PRELUDE)/isAVL.dats && $(NODE) output_dats.js
##################################################################
#
# HX: for cleaning up
#
##################################################################
clean:: ; rm -f *~
##################################################################
cleanall:: ; rm -f *~
cleanall:: ; rm -f output_dats.js
##################################################################
# export XATSHOME=$(XATSOPT)
# XATSOPT=$(shell pwd)/../../modules/xatsopt
##################################################################
# end[ATS3-XANUDU/srcgen1/xats2js/srcgen1/TEST/Makefile_nodejs]
##################################################################